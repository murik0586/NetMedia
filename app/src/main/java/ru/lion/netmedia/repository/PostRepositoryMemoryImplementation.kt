package ru.lion.netmedia.repository

import android.util.Log
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import ru.lion.netmedia.dto.Post

//–º–æ–¥–µ–ª
class PostRepositoryMemoryImplementation : PostRepository {
    private var nextId: Long = 0
    private var posts: List<Post> = mutableListOf(
        Post(
            id = ++nextId,
            "–£—Ä–æ–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –º–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º, –ø–æ–∫–æ—Ä–∏–º –ê–Ω–¥—Ä–æ–∏–¥!",
            "25 —è–Ω–≤–∞—Ä—è –≤ 21:46",
            "–ü—Ä–∏–≤–µ—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏! üåü Android-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–¥, —ç—Ç–æ —Ü–µ–ª—ã–π –º–∏—Ä –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –º—ã —Å–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–ø—Ä–æ—â–∞—é—Ç –∂–∏–∑–Ω—å –º–∏–ª–ª–∏–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —ç—Ç–æ–π –¥–∏–Ω–∞–º–∏—á–Ω–æ–π —Å—Ñ–µ—Ä—ã? –¢–æ–≥–¥–∞ –ø–æ—Ä–∞ –∏–∑—É—á–∏—Ç—å Jetpack Compose, —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ MVVM –∏ –æ—Å–≤–æ–∏—Ç—å Kotlin! –ù–∞—á–Ω–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è ‚Äî –∑–∞–≤—Ç—Ä–∞ –≤–∞—à–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–≥—É—Ç –∏–∑–º–µ–Ω–∏—Ç—å –º–∏—Ä! https://github.com/netology-code/and2-homeworks/tree/master/03_constraint_layout",
            false,
            10,
            1100,
            10
        ),
        Post(
            ++nextId,
            "–ö–∞–∫ —Å—Ç–∞—Ç—å Android-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –≤ 2024 –≥–æ–¥—É?",
            "10 —Ñ–µ–≤—Ä–∞–ª—è –≤ 14:20",
            "–•–æ—Ç–∏—Ç–µ –≤–æ–π—Ç–∏ –≤ –º–∏—Ä Android-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –Ω–æ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å? üöÄ –û—Å–≤–æ–π—Ç–µ –æ—Å–Ω–æ–≤—ã Kotlin, –∏–∑—É—á–∏—Ç–µ Jetpack Compose –∏ —Ä–∞–∑–±–µ—Ä–∏—Ç–µ—Å—å —Å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º Activity. –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ Clean Architecture! –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å —Å–µ–≥–æ–¥–Ω—è! üí™",
            true,
            25,
            2000,
            18
        ),
        Post(
            ++nextId,
            "–õ—É—á—à–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è Android-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
            "8 —Ñ–µ–≤—Ä–∞–ª—è –≤ 18:55",
            "–ö–∞–∫–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ä–µ–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–∞—é—Ç –∂–∏–∑–Ω—å Android-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É? –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ must-have: Retrofit (—Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã), Room (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö), Glide (—Ä–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏) –∏ Koin (DI). –ü–æ–ª—å–∑—É–µ—Ç–µ—Å—å –∏–º–∏? –ò–ª–∏ –µ—Å—Ç—å –ª—é–±–∏–º—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã? ü§î",
            true,
            40,
            3200,
            29
        ),
        Post(
            ++nextId,
            "–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ—ë –ø–µ—Ä–≤–æ–µ Android-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?",
            "5 —Ñ–µ–≤—Ä–∞–ª—è –≤ 12:10",
            "–ü—Ä–æ—Å—Ç–æ–π —Ç—É—Ç–æ—Ä–∏–∞–ª: 1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Android Studio, 2Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç, 3Ô∏è‚É£ –†–∞–∑–º–µ—Ç—å—Ç–µ UI —Å Jetpack Compose, 4Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ—Å—Ç—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É, 5Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ –∏–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ. –í—Å—ë! –ì–æ—Ç–æ–≤—ã –ø—Ä–æ–±–æ–≤–∞—Ç—å? üòé",
            false,
            15,
            800,
            7
        ),
        Post(
            ++nextId,
            "–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –∏–∑—É—á–∞—Ç—å Kotlin?",
            "3 —Ñ–µ–≤—Ä–∞–ª—è –≤ 09:30",
            "Kotlin ‚Äî —ç—Ç–æ –º–æ—â–Ω—ã–π —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –∫–æ–¥ Android-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º, –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ —É–¥–æ–±–Ω—ã–º. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Google, —Å–æ–≤–º–µ—Å—Ç–∏–º —Å Java –∏ –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è. –ö—Ç–æ —É–∂–µ –ø–µ—Ä–µ—à–µ–ª –Ω–∞ 100% Kotlin? üì¢",
            true,
            30,
            2500,
            21
        ),
        Post(
            ++nextId,
            "Jetpack Compose: –±—É–¥—É—â–µ–µ UI-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
            "2 —Ñ–µ–≤—Ä–∞–ª—è –≤ 15:45",
            "Jetpack Compose ‚Äî —ç—Ç–æ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω—ã–π UI-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –æ—Ç Google, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–æ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤. –ú–µ–Ω–µ–µ –∫–æ–¥–∞, –±–æ–ª—å—à–µ –≥–∏–±–∫–æ—Å—Ç–∏! –ö—Ç–æ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç? –î–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º! üé®",
            true,
            20,
            1400,
            12
        ),
        Post(
            ++nextId,
            "–ó–∞—á–µ–º –Ω—É–∂–µ–Ω MVVM?",
            "1 —Ñ–µ–≤—Ä–∞–ª—è –≤ 11:15",
            "MVVM (Model-View-ViewModel) ‚Äî —ç—Ç–æ –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä Android-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ü–æ—á–µ–º—É? –û—Ç–¥–µ–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ—Ç UI, —É–ø—Ä–æ—â—ë–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ LiveData/StateFlow. –ö—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç MVVM –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö? üèóÔ∏è",
            true,
            35,
            2700,
            19
        ),
        Post(
            ++nextId,
            "–†–∞–∑–±–∏—Ä–∞–µ–º Coroutines –≤ Kotlin",
            "30 —è–Ω–≤–∞—Ä—è –≤ 17:50",
            "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –≤ Android ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æ. Coroutines –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–∏—Å–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –ø—Ä–æ—Å—Ç–æ –∏ –±–µ–∑ callback-–∞–¥–∞. –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É –≤ ViewModelScope –∏ –æ–±–Ω–æ–≤–ª—è–µ–º UI —Å Flow! üî•",
            true,
            28,
            2200,
            16
        ),
        Post(
            ++nextId,
            "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å API?",
            "28 —è–Ω–≤–∞—Ä—è –≤ 13:10",
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å API –≤ Android —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç Retrofit + Gson/Moshi. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OkHttpClient, –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏. –ö–∞–∫–∏–µ best practices –∑–Ω–∞–µ—Ç–µ –≤—ã? üåç",
            false,
            18,
            1000,
            9
        ),
        Post(
            ++nextId,
            "–¢–æ–ø –æ—à–∏–±–æ–∫ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö Android-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
            "26 —è–Ω–≤–∞—Ä—è –≤ 20:30",
            "‚ùå –ü–∏—Å–∞—Ç—å –≤–µ—Å—å –∫–æ–¥ –≤ Activity, ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã, ‚ùå –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫, ‚ùå –ù–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø–∞–º—è—Ç—å—é. –£–∑–Ω–∞–ª–∏ —Å–µ–±—è? –í—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å! üöÄ",
            false,
            50,
            4000,
            35
        )
    )

    private val data = MutableLiveData(posts)
    override fun getAll(): LiveData<List<Post>> = data

    override fun like(id: Long) {
        posts = posts.map {
            if (it.id == id) {
                it.copy(
                    likedByMe = !it.likedByMe,
                    likes = if (it.likedByMe) it.likes - 1 else it.likes + 1
                )
            } else it
        }
        data.value = posts
    }

    override fun share(id: Long) {
        posts = posts.map {
            if (it.id == id) it.copy(shared = it.shared + 1) else it
        }
        data.value = posts

    }

    override fun view(id: Long) {
        posts = posts.map {
            if (it.id == id) it.copy(views = it.views + 1) else it
        }
        data.value = posts
    }

    override fun remove(id: Long) {
        posts = posts.filter { it.id != id }
        Log.i("Delete","–£–¥–∞–ª–∏–ª–∏")
        data.value = posts
    }

    override fun save(post: Post) {
        posts = if (post.id == 0L) {
            Log.i("ID", "ID —Ä–∞–≤–µ–Ω –Ω—É–ª—é")
            listOf(post.copy(id = nextId++)) + posts
        } else {
            posts.map {
                Log.i("ID","ID —Ä–∞–≤–µ–Ω ${it.id}")
                if (it.id != post.id) it else it.copy(content = post.content)
            }
        }
        data.value = posts
    }

}